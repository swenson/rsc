
state 0
	$accept: .top $end 

	startExpr  shift 3
	startProg  shift 2
	.  error

	top  goto 1

state 1
	$accept:  top.$end 

	$end  accept
	.  error


state 2
	top:  startProg.prog tokEOF 
	prog: .    (3)

	.  reduce 3 (src line 191)

	prog  goto 4

state 3
	top:  startExpr.cexpr tokEOF 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 7
	cexpr  goto 5
	expr_list  goto 6
	string_list  goto 11

state 4
	top:  startProg prog.tokEOF 
	prog:  prog.xdecl 

	tokAuto  shift 50
	tokChar  shift 37
	tokConst  shift 56
	tokDouble  shift 44
	tokEnum  shift 36
	tokExtern  shift 52
	tokFloat  shift 43
	tokInline  shift 55
	tokInt  shift 39
	tokLong  shift 40
	tokRegister  shift 54
	tokShort  shift 38
	tokSigned  shift 41
	tokStatic  shift 51
	tokStruct  shift 48
	tokTypeName  shift 34
	tokTypedef  shift 53
	tokUnion  shift 49
	tokUnsigned  shift 42
	tokVoid  shift 45
	tokVolatile  shift 57
	tokEOF  shift 25
	.  error

	fndef  goto 28
	decl  goto 27
	xdecl  goto 26
	cname  goto 46
	qname  goto 47
	tname  goto 32
	cqname  goto 33
	cqname_list  goto 30
	typeclass  goto 29
	structunion  goto 35
	typespec  goto 31

state 5
	top:  startExpr cexpr.tokEOF 

	tokEOF  shift 58
	.  error


state 6
	cexpr:  expr_list.    (5)
	expr_list:  expr_list., expr 

	,  shift 59
	.  reduce 5 (src line 202)


state 7
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 
	expr_list:  expr.    (170)

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 170 (src line 1227)


state 8
	expr:  tokName.    (6)

	.  reduce 6 (src line 213)


state 9
	expr:  tokNumber.    (7)

	.  reduce 7 (src line 219)


state 10
	expr:  tokLitChar.    (8)

	.  reduce 8 (src line 224)


state 11
	expr:  string_list.    (9)
	string_list:  string_list.tokString 

	tokString  shift 96
	.  reduce 9 (src line 229)


state 12
	expr:  *.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 97
	string_list  goto 11

state 13
	expr:  &.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 98
	string_list  goto 11

state 14
	expr:  +.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 99
	string_list  goto 11

state 15
	expr:  -.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 100
	string_list  goto 11

state 16
	expr:  !.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 101
	string_list  goto 11

state 17
	expr:  ~.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 102
	string_list  goto 11

state 18
	expr:  tokInc.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 103
	string_list  goto 11

state 19
	expr:  tokDec.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 104
	string_list  goto 11

state 20
	expr:  tokSizeof.expr 
	expr:  tokSizeof.( abtype ) 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 106
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 105
	string_list  goto 11

state 21
	expr:  tokOffsetof.( abtype , expr ) 

	(  shift 107
	.  error


state 22
	expr:  (.abtype ) expr 
	expr:  (.abtype ) braced_init_list 
	expr:  (.cexpr ) 

	tokAuto  shift 50
	tokChar  shift 37
	tokConst  shift 56
	tokDouble  shift 44
	tokEnum  shift 36
	tokExtern  shift 52
	tokFloat  shift 43
	tokInline  shift 55
	tokInt  shift 39
	tokLitChar  shift 10
	tokLong  shift 40
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokRegister  shift 54
	tokShort  shift 38
	tokSigned  shift 41
	tokStatic  shift 51
	tokStruct  shift 48
	tokTypeName  shift 34
	tokTypedef  shift 53
	tokUnion  shift 49
	tokUnsigned  shift 42
	tokVaArg  shift 23
	tokVoid  shift 45
	tokVolatile  shift 57
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 7
	cexpr  goto 109
	expr_list  goto 6
	cname  goto 46
	qname  goto 47
	tname  goto 32
	cqname  goto 33
	cqname_list  goto 30
	string_list  goto 11
	typeclass  goto 111
	structunion  goto 35
	abtype  goto 108
	type  goto 110
	typespec  goto 31

state 23
	expr:  tokVaArg.( expr , abtype ) 

	(  shift 112
	.  error


state 24
	string_list:  tokString.    (208)

	.  reduce 208 (src line 1446)


state 25
	top:  startProg prog tokEOF.    (1)

	.  reduce 1 (src line 179)


state 26
	prog:  prog xdecl.    (4)

	.  reduce 4 (src line 196)


state 27
	xdecl:  decl.    (129)

	.  reduce 129 (src line 962)


state 28
	xdecl:  fndef.    (130)

	.  reduce 130 (src line 968)


state 29
	decl:  typeclass.idecor_list_opt ; 
	fndef:  typeclass.decor decl_list_opt block 
	idecor_list_opt: .    (184)

	tokName  shift 116
	*  shift 117
	(  shift 118
	.  reduce 184 (src line 1307)

	decor  goto 114
	idecor  goto 119
	idecor_list  goto 115
	idecor_list_opt  goto 113

state 30
	typeclass:  cqname_list.    (121)
	typeclass:  cqname_list.typespec cqname_list_opt 
	typeclass:  cqname_list.tname cqtname_list_opt 
	cqname_list:  cqname_list.cqname 

	tokAuto  shift 50
	tokChar  shift 37
	tokConst  shift 56
	tokDouble  shift 44
	tokEnum  shift 36
	tokExtern  shift 52
	tokFloat  shift 43
	tokInline  shift 55
	tokInt  shift 39
	tokLong  shift 40
	tokRegister  shift 54
	tokShort  shift 38
	tokSigned  shift 41
	tokStatic  shift 51
	tokStruct  shift 48
	tokTypeName  shift 34
	tokTypedef  shift 53
	tokUnion  shift 49
	tokUnsigned  shift 42
	tokVoid  shift 45
	tokVolatile  shift 57
	.  reduce 121 (src line 886)

	cname  goto 46
	qname  goto 47
	tname  goto 121
	cqname  goto 122
	structunion  goto 35
	typespec  goto 120

state 31
	typeclass:  typespec.cqname_list_opt 
	cqname_list_opt: .    (192)

	tokAuto  shift 50
	tokConst  shift 56
	tokExtern  shift 52
	tokInline  shift 55
	tokRegister  shift 54
	tokStatic  shift 51
	tokTypedef  shift 53
	tokVolatile  shift 57
	.  reduce 192 (src line 1353)

	cname  goto 46
	qname  goto 47
	cqname  goto 33
	cqname_list  goto 124
	cqname_list_opt  goto 123

state 32
	typeclass:  tname.cqtname_list_opt 
	cqtname_list_opt: .    (196)

	tokAuto  shift 50
	tokChar  shift 37
	tokConst  shift 56
	tokDouble  shift 44
	tokExtern  shift 52
	tokFloat  shift 43
	tokInline  shift 55
	tokInt  shift 39
	tokLong  shift 40
	tokRegister  shift 54
	tokShort  shift 38
	tokSigned  shift 41
	tokStatic  shift 51
	tokTypedef  shift 53
	tokUnsigned  shift 42
	tokVoid  shift 45
	tokVolatile  shift 57
	.  reduce 196 (src line 1376)

	cname  goto 46
	qname  goto 47
	tname  goto 129
	cqname  goto 128
	cqtname  goto 127
	cqtname_list  goto 126
	cqtname_list_opt  goto 125

state 33
	cqname_list:  cqname.    (190)

	.  reduce 190 (src line 1341)


state 34
	typespec:  tokTypeName.    (120)

	.  reduce 120 (src line 873)


state 35
	typespec:  structunion.tag 
	typespec:  structunion.tag_opt { sudecl_list } 
	tag_opt: .    (164)

	tokName  shift 132
	tokTypeName  shift 133
	.  reduce 164 (src line 1194)

	tag  goto 130
	tag_opt  goto 131

state 36
	typespec:  tokEnum.tag 
	typespec:  tokEnum.tag_opt { edecl_list comma_opt } 
	tag_opt: .    (164)

	tokName  shift 132
	tokTypeName  shift 133
	.  reduce 164 (src line 1194)

	tag  goto 134
	tag_opt  goto 135

state 37
	tname:  tokChar.    (107)

	.  reduce 107 (src line 801)


state 38
	tname:  tokShort.    (108)

	.  reduce 108 (src line 807)


state 39
	tname:  tokInt.    (109)

	.  reduce 109 (src line 812)


state 40
	tname:  tokLong.    (110)

	.  reduce 110 (src line 817)


state 41
	tname:  tokSigned.    (111)

	.  reduce 111 (src line 822)


state 42
	tname:  tokUnsigned.    (112)

	.  reduce 112 (src line 827)


state 43
	tname:  tokFloat.    (113)

	.  reduce 113 (src line 832)


state 44
	tname:  tokDouble.    (114)

	.  reduce 114 (src line 837)


state 45
	tname:  tokVoid.    (115)

	.  reduce 115 (src line 842)


state 46
	cqname:  cname.    (116)

	.  reduce 116 (src line 848)


state 47
	cqname:  qname.    (117)

	.  reduce 117 (src line 854)


state 48
	structunion:  tokStruct.    (134)

	.  reduce 134 (src line 999)


state 49
	structunion:  tokUnion.    (135)

	.  reduce 135 (src line 1005)


state 50
	cname:  tokAuto.    (99)

	.  reduce 99 (src line 755)


state 51
	cname:  tokStatic.    (100)

	.  reduce 100 (src line 761)


state 52
	cname:  tokExtern.    (101)

	.  reduce 101 (src line 766)


state 53
	cname:  tokTypedef.    (102)

	.  reduce 102 (src line 771)


state 54
	cname:  tokRegister.    (103)

	.  reduce 103 (src line 776)


state 55
	cname:  tokInline.    (104)

	.  reduce 104 (src line 781)


state 56
	qname:  tokConst.    (105)

	.  reduce 105 (src line 788)


state 57
	qname:  tokVolatile.    (106)

	.  reduce 106 (src line 794)


state 58
	top:  startExpr cexpr tokEOF.    (2)

	.  reduce 2 (src line 185)


state 59
	expr_list:  expr_list ,.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 136
	string_list  goto 11

state 60
	expr:  expr +.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 137
	string_list  goto 11

state 61
	expr:  expr -.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 138
	string_list  goto 11

state 62
	expr:  expr *.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 139
	string_list  goto 11

state 63
	expr:  expr /.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 140
	string_list  goto 11

state 64
	expr:  expr %.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 141
	string_list  goto 11

state 65
	expr:  expr tokLsh.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 142
	string_list  goto 11

state 66
	expr:  expr tokRsh.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 143
	string_list  goto 11

state 67
	expr:  expr <.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 144
	string_list  goto 11

state 68
	expr:  expr >.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 145
	string_list  goto 11

state 69
	expr:  expr tokLtEq.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 146
	string_list  goto 11

state 70
	expr:  expr tokGtEq.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 147
	string_list  goto 11

state 71
	expr:  expr tokEqEq.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 148
	string_list  goto 11

state 72
	expr:  expr tokNotEq.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 149
	string_list  goto 11

state 73
	expr:  expr &.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 150
	string_list  goto 11

state 74
	expr:  expr ^.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 151
	string_list  goto 11

state 75
	expr:  expr |.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 152
	string_list  goto 11

state 76
	expr:  expr tokAndAnd.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 153
	string_list  goto 11

state 77
	expr:  expr tokOrOr.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 154
	string_list  goto 11

state 78
	expr:  expr ?.cexpr : expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 7
	cexpr  goto 155
	expr_list  goto 6
	string_list  goto 11

state 79
	expr:  expr =.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 156
	string_list  goto 11

state 80
	expr:  expr tokAddEq.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 157
	string_list  goto 11

state 81
	expr:  expr tokSubEq.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 158
	string_list  goto 11

state 82
	expr:  expr tokMulEq.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 159
	string_list  goto 11

state 83
	expr:  expr tokDivEq.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 160
	string_list  goto 11

state 84
	expr:  expr tokModEq.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 161
	string_list  goto 11

state 85
	expr:  expr tokLshEq.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 162
	string_list  goto 11

state 86
	expr:  expr tokRshEq.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 163
	string_list  goto 11

state 87
	expr:  expr tokAndEq.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 164
	string_list  goto 11

state 88
	expr:  expr tokXorEq.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 165
	string_list  goto 11

state 89
	expr:  expr tokOrEq.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 166
	string_list  goto 11

state 90
	expr:  expr (.expr_list_opt ) 
	expr_list_opt: .    (172)

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  reduce 172 (src line 1239)

	expr  goto 7
	expr_list  goto 168
	expr_list_opt  goto 167
	string_list  goto 11

state 91
	expr:  expr [.cexpr ] 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 7
	cexpr  goto 169
	expr_list  goto 6
	string_list  goto 11

state 92
	expr:  expr tokInc.    (56)

	.  reduce 56 (src line 464)


state 93
	expr:  expr tokDec.    (57)

	.  reduce 57 (src line 469)


state 94
	expr:  expr tokArrow.tag 

	tokName  shift 132
	tokTypeName  shift 133
	.  error

	tag  goto 170

state 95
	expr:  expr ..tag 

	tokName  shift 132
	tokTypeName  shift 133
	.  error

	tag  goto 171

state 96
	string_list:  string_list tokString.    (209)

	.  reduce 209 (src line 1452)


state 97
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  * expr.    (40)
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 40 (src line 384)


state 98
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  & expr.    (41)
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 41 (src line 389)


state 99
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  + expr.    (42)
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 42 (src line 394)


state 100
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  - expr.    (43)
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 43 (src line 399)


state 101
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  ! expr.    (44)
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 44 (src line 404)


state 102
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  ~ expr.    (45)
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 45 (src line 409)


state 103
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  tokInc expr.    (46)
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 46 (src line 414)


state 104
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  tokDec expr.    (47)
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 47 (src line 419)


state 105
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  tokSizeof expr.    (48)
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 48 (src line 424)


state 106
	expr:  tokSizeof (.abtype ) 
	expr:  (.abtype ) expr 
	expr:  (.abtype ) braced_init_list 
	expr:  (.cexpr ) 

	tokAuto  shift 50
	tokChar  shift 37
	tokConst  shift 56
	tokDouble  shift 44
	tokEnum  shift 36
	tokExtern  shift 52
	tokFloat  shift 43
	tokInline  shift 55
	tokInt  shift 39
	tokLitChar  shift 10
	tokLong  shift 40
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokRegister  shift 54
	tokShort  shift 38
	tokSigned  shift 41
	tokStatic  shift 51
	tokStruct  shift 48
	tokTypeName  shift 34
	tokTypedef  shift 53
	tokUnion  shift 49
	tokUnsigned  shift 42
	tokVaArg  shift 23
	tokVoid  shift 45
	tokVolatile  shift 57
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 7
	cexpr  goto 109
	expr_list  goto 6
	cname  goto 46
	qname  goto 47
	tname  goto 32
	cqname  goto 33
	cqname_list  goto 30
	string_list  goto 11
	typeclass  goto 111
	structunion  goto 35
	abtype  goto 172
	type  goto 110
	typespec  goto 31

state 107
	expr:  tokOffsetof (.abtype , expr ) 

	tokAuto  shift 50
	tokChar  shift 37
	tokConst  shift 56
	tokDouble  shift 44
	tokEnum  shift 36
	tokExtern  shift 52
	tokFloat  shift 43
	tokInline  shift 55
	tokInt  shift 39
	tokLong  shift 40
	tokRegister  shift 54
	tokShort  shift 38
	tokSigned  shift 41
	tokStatic  shift 51
	tokStruct  shift 48
	tokTypeName  shift 34
	tokTypedef  shift 53
	tokUnion  shift 49
	tokUnsigned  shift 42
	tokVoid  shift 45
	tokVolatile  shift 57
	.  error

	cname  goto 46
	qname  goto 47
	tname  goto 32
	cqname  goto 33
	cqname_list  goto 30
	typeclass  goto 111
	structunion  goto 35
	abtype  goto 173
	type  goto 110
	typespec  goto 31

state 108
	expr:  ( abtype.) expr 
	expr:  ( abtype.) braced_init_list 

	)  shift 174
	.  error


state 109
	expr:  ( cexpr.) 

	)  shift 175
	.  error


state 110
	abtype:  type.abdecor 
	abdecor: .    (82)

	*  shift 177
	(  shift 179
	.  reduce 82 (src line 615)

	abdecor  goto 176
	abdec1  goto 178

state 111
	type:  typeclass.    (126)

	.  reduce 126 (src line 921)


state 112
	expr:  tokVaArg (.expr , abtype ) 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 180
	string_list  goto 11

state 113
	decl:  typeclass idecor_list_opt.; 

	;  shift 181
	.  error


state 114
	decor:  decor.( fnarg_list_opt ) 
	decor:  decor.[ expr_opt ] 
	idecor:  decor.    (97)
	idecor:  decor.= init 
	fndef:  typeclass decor.decl_list_opt block 
	decl_list_opt: .    (174)

	,  reduce 97 (src line 742)
	=  shift 184
	[  shift 183
	(  shift 182
	;  reduce 97 (src line 742)
	.  reduce 174 (src line 1250)

	decl_list_opt  goto 185

state 115
	idecor_list:  idecor_list., idecor 
	idecor_list_opt:  idecor_list.    (185)

	,  shift 186
	.  reduce 185 (src line 1312)


state 116
	decor:  tokName.    (88)

	.  reduce 88 (src line 668)


state 117
	decor:  *.qname_list_opt decor 
	qname_list_opt: .    (188)

	tokConst  shift 56
	tokVolatile  shift 57
	.  reduce 188 (src line 1330)

	qname  goto 189
	qname_list  goto 188
	qname_list_opt  goto 187

state 118
	decor:  (.decor ) 

	tokName  shift 116
	*  shift 117
	(  shift 118
	.  error

	decor  goto 190

state 119
	idecor_list:  idecor.    (182)

	.  reduce 182 (src line 1295)


state 120
	typeclass:  cqname_list typespec.cqname_list_opt 
	cqname_list_opt: .    (192)

	tokAuto  shift 50
	tokConst  shift 56
	tokExtern  shift 52
	tokInline  shift 55
	tokRegister  shift 54
	tokStatic  shift 51
	tokTypedef  shift 53
	tokVolatile  shift 57
	.  reduce 192 (src line 1353)

	cname  goto 46
	qname  goto 47
	cqname  goto 33
	cqname_list  goto 124
	cqname_list_opt  goto 191

state 121
	typeclass:  cqname_list tname.cqtname_list_opt 
	cqtname_list_opt: .    (196)

	tokAuto  shift 50
	tokChar  shift 37
	tokConst  shift 56
	tokDouble  shift 44
	tokExtern  shift 52
	tokFloat  shift 43
	tokInline  shift 55
	tokInt  shift 39
	tokLong  shift 40
	tokRegister  shift 54
	tokShort  shift 38
	tokSigned  shift 41
	tokStatic  shift 51
	tokTypedef  shift 53
	tokUnsigned  shift 42
	tokVoid  shift 45
	tokVolatile  shift 57
	.  reduce 196 (src line 1376)

	cname  goto 46
	qname  goto 47
	tname  goto 129
	cqname  goto 128
	cqtname  goto 127
	cqtname_list  goto 126
	cqtname_list_opt  goto 192

state 122
	cqname_list:  cqname_list cqname.    (191)

	.  reduce 191 (src line 1347)


state 123
	typeclass:  typespec cqname_list_opt.    (124)

	.  reduce 124 (src line 905)


state 124
	cqname_list:  cqname_list.cqname 
	cqname_list_opt:  cqname_list.    (193)

	tokAuto  shift 50
	tokConst  shift 56
	tokExtern  shift 52
	tokInline  shift 55
	tokRegister  shift 54
	tokStatic  shift 51
	tokTypedef  shift 53
	tokVolatile  shift 57
	.  reduce 193 (src line 1358)

	cname  goto 46
	qname  goto 47
	cqname  goto 122

state 125
	typeclass:  tname cqtname_list_opt.    (125)

	.  reduce 125 (src line 911)


state 126
	cqtname_list:  cqtname_list.cqtname 
	cqtname_list_opt:  cqtname_list.    (197)

	tokAuto  shift 50
	tokChar  shift 37
	tokConst  shift 56
	tokDouble  shift 44
	tokExtern  shift 52
	tokFloat  shift 43
	tokInline  shift 55
	tokInt  shift 39
	tokLong  shift 40
	tokRegister  shift 54
	tokShort  shift 38
	tokSigned  shift 41
	tokStatic  shift 51
	tokTypedef  shift 53
	tokUnsigned  shift 42
	tokVoid  shift 45
	tokVolatile  shift 57
	.  reduce 197 (src line 1381)

	cname  goto 46
	qname  goto 47
	tname  goto 129
	cqname  goto 128
	cqtname  goto 193

state 127
	cqtname_list:  cqtname.    (194)

	.  reduce 194 (src line 1364)


state 128
	cqtname:  cqname.    (118)

	.  reduce 118 (src line 860)


state 129
	cqtname:  tname.    (119)

	.  reduce 119 (src line 866)


state 130
	typespec:  structunion tag.    (139)
	tag_opt:  tag.    (165)

	{  reduce 165 (src line 1199)
	.  reduce 139 (src line 1042)


state 131
	typespec:  structunion tag_opt.{ sudecl_list } 

	{  shift 194
	.  error


state 132
	tag:  tokName.    (132)

	.  reduce 132 (src line 986)


state 133
	tag:  tokTypeName.    (133)

	.  reduce 133 (src line 992)


state 134
	typespec:  tokEnum tag.    (144)
	tag_opt:  tag.    (165)

	{  reduce 165 (src line 1199)
	.  reduce 144 (src line 1074)


state 135
	typespec:  tokEnum tag_opt.{ edecl_list comma_opt } 

	{  shift 195
	.  error


state 136
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 
	expr_list:  expr_list , expr.    (171)

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 171 (src line 1233)


state 137
	expr:  expr.+ expr 
	expr:  expr + expr.    (10)
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 10 (src line 234)


state 138
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr - expr.    (11)
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 11 (src line 239)


state 139
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr * expr.    (12)
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 12 (src line 244)


state 140
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr / expr.    (13)
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 13 (src line 249)


state 141
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr % expr.    (14)
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 14 (src line 254)


state 142
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr tokLsh expr.    (15)
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 15 (src line 259)


state 143
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr tokRsh expr.    (16)
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 16 (src line 264)


state 144
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr < expr.    (17)
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 17 (src line 269)


state 145
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr > expr.    (18)
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 18 (src line 274)


state 146
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr tokLtEq expr.    (19)
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 19 (src line 279)


state 147
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr tokGtEq expr.    (20)
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 20 (src line 284)


state 148
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr tokEqEq expr.    (21)
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 21 (src line 289)


state 149
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr tokNotEq expr.    (22)
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 22 (src line 294)


state 150
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr & expr.    (23)
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 23 (src line 299)


state 151
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr ^ expr.    (24)
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 24 (src line 304)


state 152
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr | expr.    (25)
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 25 (src line 309)


state 153
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr tokAndAnd expr.    (26)
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 26 (src line 314)


state 154
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr tokOrOr expr.    (27)
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 27 (src line 319)


state 155
	expr:  expr ? cexpr.: expr 

	:  shift 196
	.  error


state 156
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr = expr.    (29)
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 29 (src line 329)


state 157
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr tokAddEq expr.    (30)
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 30 (src line 334)


state 158
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr tokSubEq expr.    (31)
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 31 (src line 339)


state 159
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr tokMulEq expr.    (32)
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 32 (src line 344)


state 160
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr tokDivEq expr.    (33)
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 33 (src line 349)


state 161
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr tokModEq expr.    (34)
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 34 (src line 354)


state 162
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr tokLshEq expr.    (35)
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 35 (src line 359)


state 163
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr tokRshEq expr.    (36)
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 36 (src line 364)


state 164
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr tokAndEq expr.    (37)
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 37 (src line 369)


state 165
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr tokXorEq expr.    (38)
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 38 (src line 374)


state 166
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr tokOrEq expr.    (39)
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 39 (src line 379)


state 167
	expr:  expr ( expr_list_opt.) 

	)  shift 197
	.  error


state 168
	expr_list:  expr_list., expr 
	expr_list_opt:  expr_list.    (173)

	,  shift 59
	.  reduce 173 (src line 1244)


state 169
	expr:  expr [ cexpr.] 

	]  shift 198
	.  error


state 170
	expr:  expr tokArrow tag.    (142)

	.  reduce 142 (src line 1061)


state 171
	expr:  expr . tag.    (143)

	.  reduce 143 (src line 1067)


state 172
	expr:  tokSizeof ( abtype.) 
	expr:  ( abtype.) expr 
	expr:  ( abtype.) braced_init_list 

	)  shift 199
	.  error


state 173
	expr:  tokOffsetof ( abtype., expr ) 

	,  shift 200
	.  error


state 174
	expr:  ( abtype ).expr 
	expr:  ( abtype ).braced_init_list 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	{  shift 203
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 201
	braced_init_list  goto 202
	string_list  goto 11

state 175
	expr:  ( cexpr ).    (53)

	.  reduce 53 (src line 449)


state 176
	abdec1:  abdecor.[ expr_opt ] 
	abtype:  type abdecor.    (127)

	[  shift 204
	.  reduce 127 (src line 934)


state 177
	abdecor:  *.qname_list_opt abdecor 
	qname_list_opt: .    (188)

	tokConst  shift 56
	tokVolatile  shift 57
	.  reduce 188 (src line 1330)

	qname  goto 189
	qname_list  goto 188
	qname_list_opt  goto 205

state 178
	abdecor:  abdec1.    (84)
	abdec1:  abdec1.( fnarg_list_opt ) 

	(  shift 206
	.  reduce 84 (src line 631)


state 179
	abdec1:  (.abdecor ) 
	abdecor: .    (82)

	*  shift 177
	(  shift 179
	.  reduce 82 (src line 615)

	abdecor  goto 207
	abdec1  goto 178

state 180
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  tokVaArg ( expr., abtype ) 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	,  shift 208
	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  error


state 181
	decl:  typeclass idecor_list_opt ;.    (128)

	.  reduce 128 (src line 942)


state 182
	decor:  decor (.fnarg_list_opt ) 
	fnarg_list_opt: .    (180)

	tokAuto  shift 50
	tokChar  shift 37
	tokConst  shift 56
	tokDotDotDot  shift 214
	tokDouble  shift 44
	tokEnum  shift 36
	tokExtern  shift 52
	tokFloat  shift 43
	tokInline  shift 55
	tokInt  shift 39
	tokLong  shift 40
	tokName  shift 212
	tokRegister  shift 54
	tokShort  shift 38
	tokSigned  shift 41
	tokStatic  shift 51
	tokStruct  shift 48
	tokTypeName  shift 34
	tokTypedef  shift 53
	tokUnion  shift 49
	tokUnsigned  shift 42
	tokVoid  shift 45
	tokVolatile  shift 57
	.  reduce 180 (src line 1284)

	fnarg  goto 211
	fnarg_list  goto 210
	fnarg_list_opt  goto 209
	cname  goto 46
	qname  goto 47
	tname  goto 32
	cqname  goto 33
	cqname_list  goto 30
	typeclass  goto 111
	structunion  goto 35
	type  goto 213
	typespec  goto 31

state 183
	decor:  decor [.expr_opt ] 
	expr_opt: .    (168)

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  reduce 168 (src line 1216)

	expr  goto 216
	expr_opt  goto 215
	string_list  goto 11

state 184
	idecor:  decor =.init 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	{  shift 203
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 218
	init  goto 217
	braced_init_list  goto 219
	string_list  goto 11

state 185
	fndef:  typeclass decor decl_list_opt.block 
	decl_list_opt:  decl_list_opt.decl 

	tokAuto  shift 50
	tokChar  shift 37
	tokConst  shift 56
	tokDouble  shift 44
	tokEnum  shift 36
	tokExtern  shift 52
	tokFloat  shift 43
	tokInline  shift 55
	tokInt  shift 39
	tokLong  shift 40
	tokRegister  shift 54
	tokShort  shift 38
	tokSigned  shift 41
	tokStatic  shift 51
	tokStruct  shift 48
	tokTypeName  shift 34
	tokTypedef  shift 53
	tokUnion  shift 49
	tokUnsigned  shift 42
	tokVoid  shift 45
	tokVolatile  shift 57
	{  shift 222
	.  error

	decl  goto 221
	block  goto 220
	cname  goto 46
	qname  goto 47
	tname  goto 32
	cqname  goto 33
	cqname_list  goto 30
	typeclass  goto 223
	structunion  goto 35
	typespec  goto 31

state 186
	idecor_list:  idecor_list ,.idecor 

	tokName  shift 116
	*  shift 117
	(  shift 118
	.  error

	decor  goto 225
	idecor  goto 224

state 187
	decor:  * qname_list_opt.decor 

	tokName  shift 116
	*  shift 117
	(  shift 118
	.  error

	decor  goto 226

state 188
	qname_list:  qname_list.qname 
	qname_list_opt:  qname_list.    (189)

	tokConst  shift 56
	tokVolatile  shift 57
	.  reduce 189 (src line 1335)

	qname  goto 227

state 189
	qname_list:  qname.    (186)

	.  reduce 186 (src line 1318)


state 190
	decor:  ( decor.) 
	decor:  decor.( fnarg_list_opt ) 
	decor:  decor.[ expr_opt ] 

	[  shift 183
	(  shift 182
	)  shift 228
	.  error


state 191
	typeclass:  cqname_list typespec cqname_list_opt.    (122)

	.  reduce 122 (src line 892)


state 192
	typeclass:  cqname_list tname cqtname_list_opt.    (123)

	.  reduce 123 (src line 898)


state 193
	cqtname_list:  cqtname_list cqtname.    (195)

	.  reduce 195 (src line 1370)


state 194
	typespec:  structunion tag_opt {.sudecl_list } 

	tokAuto  shift 50
	tokChar  shift 37
	tokConst  shift 56
	tokDouble  shift 44
	tokEnum  shift 36
	tokExtern  shift 52
	tokFloat  shift 43
	tokInline  shift 55
	tokInt  shift 39
	tokLong  shift 40
	tokRegister  shift 54
	tokShort  shift 38
	tokSigned  shift 41
	tokStatic  shift 51
	tokStruct  shift 48
	tokTypeName  shift 34
	tokTypedef  shift 53
	tokUnion  shift 49
	tokUnsigned  shift 42
	tokVoid  shift 45
	tokVolatile  shift 57
	.  error

	sudecl  goto 230
	sudecl_list  goto 229
	cname  goto 46
	qname  goto 47
	tname  goto 32
	cqname  goto 33
	cqname_list  goto 30
	typeclass  goto 111
	structunion  goto 35
	type  goto 231
	typespec  goto 31

state 195
	typespec:  tokEnum tag_opt {.edecl_list comma_opt } 

	tokName  shift 234
	.  error

	edecl  goto 233
	edecl_list  goto 232

state 196
	expr:  expr ? cexpr :.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 235
	string_list  goto 11

state 197
	expr:  expr ( expr_list_opt ).    (54)

	.  reduce 54 (src line 454)


state 198
	expr:  expr [ cexpr ].    (55)

	.  reduce 55 (src line 459)


state 199
	expr:  tokSizeof ( abtype ).    (49)
	expr:  ( abtype ).expr 
	expr:  ( abtype ).braced_init_list 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	{  shift 203
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  reduce 49 (src line 429)

	expr  goto 201
	braced_init_list  goto 202
	string_list  goto 11

state 200
	expr:  tokOffsetof ( abtype ,.expr ) 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 236
	string_list  goto 11

state 201
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  ( abtype ) expr.    (51)
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 51 (src line 439)


state 202
	expr:  ( abtype ) braced_init_list.    (52)

	.  reduce 52 (src line 444)


state 203
	braced_init_list:  {.} 
	braced_init_list:  {.binit_list binit } 
	braced_init_list:  {.binit_list binit , } 
	binit_list: .    (153)

	}  shift 237
	.  reduce 153 (src line 1130)

	binit_list  goto 238

state 204
	abdec1:  abdecor [.expr_opt ] 
	expr_opt: .    (168)

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  reduce 168 (src line 1216)

	expr  goto 216
	expr_opt  goto 239
	string_list  goto 11

state 205
	abdecor:  * qname_list_opt.abdecor 
	abdecor: .    (82)

	*  shift 177
	(  shift 179
	.  reduce 82 (src line 615)

	abdecor  goto 240
	abdec1  goto 178

state 206
	abdec1:  abdec1 (.fnarg_list_opt ) 
	fnarg_list_opt: .    (180)

	tokAuto  shift 50
	tokChar  shift 37
	tokConst  shift 56
	tokDotDotDot  shift 214
	tokDouble  shift 44
	tokEnum  shift 36
	tokExtern  shift 52
	tokFloat  shift 43
	tokInline  shift 55
	tokInt  shift 39
	tokLong  shift 40
	tokName  shift 212
	tokRegister  shift 54
	tokShort  shift 38
	tokSigned  shift 41
	tokStatic  shift 51
	tokStruct  shift 48
	tokTypeName  shift 34
	tokTypedef  shift 53
	tokUnion  shift 49
	tokUnsigned  shift 42
	tokVoid  shift 45
	tokVolatile  shift 57
	.  reduce 180 (src line 1284)

	fnarg  goto 211
	fnarg_list  goto 210
	fnarg_list_opt  goto 241
	cname  goto 46
	qname  goto 47
	tname  goto 32
	cqname  goto 33
	cqname_list  goto 30
	typeclass  goto 111
	structunion  goto 35
	type  goto 213
	typespec  goto 31

state 207
	abdec1:  abdecor.[ expr_opt ] 
	abdec1:  ( abdecor.) 

	[  shift 204
	)  shift 242
	.  error


state 208
	expr:  tokVaArg ( expr ,.abtype ) 

	tokAuto  shift 50
	tokChar  shift 37
	tokConst  shift 56
	tokDouble  shift 44
	tokEnum  shift 36
	tokExtern  shift 52
	tokFloat  shift 43
	tokInline  shift 55
	tokInt  shift 39
	tokLong  shift 40
	tokRegister  shift 54
	tokShort  shift 38
	tokSigned  shift 41
	tokStatic  shift 51
	tokStruct  shift 48
	tokTypeName  shift 34
	tokTypedef  shift 53
	tokUnion  shift 49
	tokUnsigned  shift 42
	tokVoid  shift 45
	tokVolatile  shift 57
	.  error

	cname  goto 46
	qname  goto 47
	tname  goto 32
	cqname  goto 33
	cqname_list  goto 30
	typeclass  goto 111
	structunion  goto 35
	abtype  goto 243
	type  goto 110
	typespec  goto 31

state 209
	decor:  decor ( fnarg_list_opt.) 

	)  shift 244
	.  error


state 210
	fnarg_list:  fnarg_list., fnarg 
	fnarg_list_opt:  fnarg_list.    (181)

	,  shift 245
	.  reduce 181 (src line 1289)


state 211
	fnarg_list:  fnarg.    (178)

	.  reduce 178 (src line 1272)


state 212
	fnarg:  tokName.    (93)

	.  reduce 93 (src line 718)


state 213
	fnarg:  type.abdecor 
	fnarg:  type.decor 
	abdecor: .    (82)

	tokName  shift 116
	*  shift 248
	(  shift 249
	.  reduce 82 (src line 615)

	abdecor  goto 246
	abdec1  goto 178
	decor  goto 247

state 214
	fnarg:  tokDotDotDot.    (96)

	.  reduce 96 (src line 735)


state 215
	decor:  decor [ expr_opt.] 

	]  shift 250
	.  error


state 216
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 
	expr_opt:  expr.    (169)

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 169 (src line 1221)


state 217
	idecor:  decor = init.    (98)

	.  reduce 98 (src line 748)


state 218
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 
	init:  expr.    (148)

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 148 (src line 1101)


state 219
	init:  braced_init_list.    (149)

	.  reduce 149 (src line 1107)


state 220
	fndef:  typeclass decor decl_list_opt block.    (131)

	.  reduce 131 (src line 974)


state 221
	decl_list_opt:  decl_list_opt decl.    (175)

	.  reduce 175 (src line 1255)


state 222
	block:  {.$$62 block1 } 
	$$62: .    (62)

	.  reduce 62 (src line 499)

	$$62  goto 251

state 223
	decl:  typeclass.idecor_list_opt ; 
	idecor_list_opt: .    (184)

	tokName  shift 116
	*  shift 117
	(  shift 118
	.  reduce 184 (src line 1307)

	decor  goto 225
	idecor  goto 119
	idecor_list  goto 115
	idecor_list_opt  goto 113

state 224
	idecor_list:  idecor_list , idecor.    (183)

	.  reduce 183 (src line 1301)


state 225
	decor:  decor.( fnarg_list_opt ) 
	decor:  decor.[ expr_opt ] 
	idecor:  decor.    (97)
	idecor:  decor.= init 

	=  shift 184
	[  shift 183
	(  shift 182
	.  reduce 97 (src line 742)


state 226
	decor:  * qname_list_opt decor.    (89)
	decor:  decor.( fnarg_list_opt ) 
	decor:  decor.[ expr_opt ] 

	[  shift 183
	(  shift 182
	.  reduce 89 (src line 675)


state 227
	qname_list:  qname_list qname.    (187)

	.  reduce 187 (src line 1324)


state 228
	decor:  ( decor ).    (90)

	.  reduce 90 (src line 687)


state 229
	typespec:  structunion tag_opt { sudecl_list.} 
	sudecl_list:  sudecl_list.sudecl 

	tokAuto  shift 50
	tokChar  shift 37
	tokConst  shift 56
	tokDouble  shift 44
	tokEnum  shift 36
	tokExtern  shift 52
	tokFloat  shift 43
	tokInline  shift 55
	tokInt  shift 39
	tokLong  shift 40
	tokRegister  shift 54
	tokShort  shift 38
	tokSigned  shift 41
	tokStatic  shift 51
	tokStruct  shift 48
	tokTypeName  shift 34
	tokTypedef  shift 53
	tokUnion  shift 49
	tokUnsigned  shift 42
	tokVoid  shift 45
	tokVolatile  shift 57
	}  shift 252
	.  error

	sudecl  goto 253
	cname  goto 46
	qname  goto 47
	tname  goto 32
	cqname  goto 33
	cqname_list  goto 30
	typeclass  goto 111
	structunion  goto 35
	type  goto 231
	typespec  goto 31

state 230
	sudecl_list:  sudecl.    (202)

	.  reduce 202 (src line 1411)


state 231
	sudecl:  type.sudecor_list_opt ; 
	sudecor_list_opt: .    (200)
	tag_opt: .    (164)

	tokName  shift 259
	tokTypeName  shift 133
	*  shift 117
	(  shift 118
	;  reduce 200 (src line 1400)
	.  reduce 164 (src line 1194)

	decor  goto 257
	sudecor  goto 256
	sudecor_list  goto 255
	sudecor_list_opt  goto 254
	tag  goto 260
	tag_opt  goto 258

state 232
	typespec:  tokEnum tag_opt { edecl_list.comma_opt } 
	edecl_list:  edecl_list., edecl 
	comma_opt: .    (160)

	,  shift 262
	.  reduce 160 (src line 1170)

	comma_opt  goto 261

state 233
	edecl_list:  edecl.    (206)

	.  reduce 206 (src line 1434)


state 234
	edecl:  tokName.eqexpr_opt 
	eqexpr_opt: .    (204)

	=  shift 265
	.  reduce 204 (src line 1423)

	eqexpr  goto 264
	eqexpr_opt  goto 263

state 235
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr ? cexpr : expr.    (28)
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 28 (src line 324)


state 236
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  tokOffsetof ( abtype , expr.) 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	)  shift 266
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  error


state 237
	braced_init_list:  { }.    (150)

	.  reduce 150 (src line 1113)


state 238
	braced_init_list:  { binit_list.binit } 
	braced_init_list:  { binit_list.binit , } 
	binit_list:  binit_list.binit , 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	{  shift 203
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	.  shift 271
	[  shift 272
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 218
	init  goto 268
	binit  goto 267
	braced_init_list  goto 219
	initprefix  goto 270
	initprefix_list  goto 269
	string_list  goto 11

state 239
	abdec1:  abdecor [ expr_opt.] 

	]  shift 273
	.  error


state 240
	abdecor:  * qname_list_opt abdecor.    (83)
	abdec1:  abdecor.[ expr_opt ] 

	[  shift 204
	.  reduce 83 (src line 620)


state 241
	abdec1:  abdec1 ( fnarg_list_opt.) 

	)  shift 274
	.  error


state 242
	abdec1:  ( abdecor ).    (87)

	.  reduce 87 (src line 661)


state 243
	expr:  tokVaArg ( expr , abtype.) 

	)  shift 275
	.  error


state 244
	decor:  decor ( fnarg_list_opt ).    (91)

	.  reduce 91 (src line 692)


state 245
	fnarg_list:  fnarg_list ,.fnarg 

	tokAuto  shift 50
	tokChar  shift 37
	tokConst  shift 56
	tokDotDotDot  shift 214
	tokDouble  shift 44
	tokEnum  shift 36
	tokExtern  shift 52
	tokFloat  shift 43
	tokInline  shift 55
	tokInt  shift 39
	tokLong  shift 40
	tokName  shift 212
	tokRegister  shift 54
	tokShort  shift 38
	tokSigned  shift 41
	tokStatic  shift 51
	tokStruct  shift 48
	tokTypeName  shift 34
	tokTypedef  shift 53
	tokUnion  shift 49
	tokUnsigned  shift 42
	tokVoid  shift 45
	tokVolatile  shift 57
	.  error

	fnarg  goto 276
	cname  goto 46
	qname  goto 47
	tname  goto 32
	cqname  goto 33
	cqname_list  goto 30
	typeclass  goto 111
	structunion  goto 35
	type  goto 213
	typespec  goto 31

state 246
	abdec1:  abdecor.[ expr_opt ] 
	fnarg:  type abdecor.    (94)

	[  shift 204
	.  reduce 94 (src line 724)


state 247
	decor:  decor.( fnarg_list_opt ) 
	decor:  decor.[ expr_opt ] 
	fnarg:  type decor.    (95)

	[  shift 183
	(  shift 182
	.  reduce 95 (src line 729)


state 248
	abdecor:  *.qname_list_opt abdecor 
	decor:  *.qname_list_opt decor 
	qname_list_opt: .    (188)

	tokConst  shift 56
	tokVolatile  shift 57
	.  reduce 188 (src line 1330)

	qname  goto 189
	qname_list  goto 188
	qname_list_opt  goto 277

state 249
	abdec1:  (.abdecor ) 
	decor:  (.decor ) 
	abdecor: .    (82)

	tokName  shift 116
	*  shift 248
	(  shift 249
	.  reduce 82 (src line 615)

	abdecor  goto 207
	abdec1  goto 178
	decor  goto 190

state 250
	decor:  decor [ expr_opt ].    (92)

	.  reduce 92 (src line 704)


state 251
	block:  { $$62.block1 } 
	block1: .    (59)

	.  reduce 59 (src line 480)

	block1  goto 278

state 252
	typespec:  structunion tag_opt { sudecl_list }.    (140)

	.  reduce 140 (src line 1048)


state 253
	sudecl_list:  sudecl_list sudecl.    (203)

	.  reduce 203 (src line 1417)


state 254
	sudecl:  type sudecor_list_opt.; 

	;  shift 279
	.  error


state 255
	sudecor_list:  sudecor_list., sudecor 
	sudecor_list_opt:  sudecor_list.    (201)

	,  shift 280
	.  reduce 201 (src line 1405)


state 256
	sudecor_list:  sudecor.    (198)

	.  reduce 198 (src line 1387)


state 257
	decor:  decor.( fnarg_list_opt ) 
	decor:  decor.[ expr_opt ] 
	sudecor:  decor.    (136)

	[  shift 183
	(  shift 182
	.  reduce 136 (src line 1011)


state 258
	sudecor:  tag_opt.: expr 

	:  shift 281
	.  error


state 259
	decor:  tokName.    (88)
	tag:  tokName.    (132)

	:  reduce 132 (src line 986)
	.  reduce 88 (src line 668)


state 260
	tag_opt:  tag.    (165)

	.  reduce 165 (src line 1199)


state 261
	typespec:  tokEnum tag_opt { edecl_list comma_opt.} 

	}  shift 282
	.  error


state 262
	comma_opt:  ,.    (161)
	edecl_list:  edecl_list ,.edecl 

	tokName  shift 234
	.  reduce 161 (src line 1174)

	edecl  goto 283

state 263
	edecl:  tokName eqexpr_opt.    (146)

	.  reduce 146 (src line 1086)


state 264
	eqexpr_opt:  eqexpr.    (205)

	.  reduce 205 (src line 1428)


state 265
	eqexpr:  =.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 284
	string_list  goto 11

state 266
	expr:  tokOffsetof ( abtype , expr ).    (50)

	.  reduce 50 (src line 434)


state 267
	braced_init_list:  { binit_list binit.} 
	braced_init_list:  { binit_list binit., } 
	binit_list:  binit_list binit., 

	,  shift 286
	}  shift 285
	.  error


state 268
	binit:  init.    (155)

	.  reduce 155 (src line 1141)


state 269
	binit:  initprefix_list.eq_opt init 
	initprefix_list:  initprefix_list.initprefix 
	eq_opt: .    (158)

	=  shift 289
	.  shift 271
	[  shift 272
	.  reduce 158 (src line 1161)

	initprefix  goto 288
	eq_opt  goto 287

state 270
	initprefix_list:  initprefix.    (162)

	.  reduce 162 (src line 1182)


state 271
	initprefix:  ..tag 

	tokName  shift 132
	tokTypeName  shift 133
	.  error

	tag  goto 290

state 272
	initprefix:  [.expr ] 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 291
	string_list  goto 11

state 273
	abdec1:  abdecor [ expr_opt ].    (86)

	.  reduce 86 (src line 650)


state 274
	abdec1:  abdec1 ( fnarg_list_opt ).    (85)

	.  reduce 85 (src line 637)


state 275
	expr:  tokVaArg ( expr , abtype ).    (58)

	.  reduce 58 (src line 474)


state 276
	fnarg_list:  fnarg_list , fnarg.    (179)

	.  reduce 179 (src line 1278)


state 277
	abdecor:  * qname_list_opt.abdecor 
	decor:  * qname_list_opt.decor 
	abdecor: .    (82)

	tokName  shift 116
	*  shift 248
	(  shift 249
	.  reduce 82 (src line 615)

	abdecor  goto 240
	abdec1  goto 178
	decor  goto 226

state 278
	block1:  block1.decl 
	block1:  block1.lstmt 
	block:  { $$62 block1.} 
	label_list_opt: .    (176)

	tokAuto  shift 50
	tokChar  shift 37
	tokConst  shift 56
	tokDouble  shift 44
	tokEnum  shift 36
	tokExtern  shift 52
	tokFloat  shift 43
	tokInline  shift 55
	tokInt  shift 39
	tokLong  shift 40
	tokRegister  shift 54
	tokShort  shift 38
	tokSigned  shift 41
	tokStatic  shift 51
	tokStruct  shift 48
	tokTypeName  shift 34
	tokTypedef  shift 53
	tokUnion  shift 49
	tokUnsigned  shift 42
	tokVoid  shift 45
	tokVolatile  shift 57
	}  shift 294
	.  reduce 176 (src line 1261)

	decl  goto 292
	label_list_opt  goto 295
	lstmt  goto 293
	cname  goto 46
	qname  goto 47
	tname  goto 32
	cqname  goto 33
	cqname_list  goto 30
	typeclass  goto 223
	structunion  goto 35
	typespec  goto 31

state 279
	sudecl:  type sudecor_list_opt ;.    (138)

	.  reduce 138 (src line 1028)


state 280
	sudecor_list:  sudecor_list ,.sudecor 
	tag_opt: .    (164)

	tokName  shift 259
	tokTypeName  shift 133
	*  shift 117
	(  shift 118
	.  reduce 164 (src line 1194)

	decor  goto 257
	sudecor  goto 296
	tag  goto 260
	tag_opt  goto 258

state 281
	sudecor:  tag_opt :.expr 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 297
	string_list  goto 11

state 282
	typespec:  tokEnum tag_opt { edecl_list comma_opt }.    (145)

	.  reduce 145 (src line 1080)


state 283
	edecl_list:  edecl_list , edecl.    (207)

	.  reduce 207 (src line 1440)


state 284
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 
	eqexpr:  = expr.    (147)

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 147 (src line 1093)


state 285
	braced_init_list:  { binit_list binit }.    (151)

	.  reduce 151 (src line 1119)


state 286
	braced_init_list:  { binit_list binit ,.} 
	binit_list:  binit_list binit ,.    (154)

	}  shift 298
	.  reduce 154 (src line 1135)


state 287
	binit:  initprefix_list eq_opt.init 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	{  shift 203
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 218
	init  goto 299
	braced_init_list  goto 219
	string_list  goto 11

state 288
	initprefix_list:  initprefix_list initprefix.    (163)

	.  reduce 163 (src line 1188)


state 289
	eq_opt:  =.    (159)

	.  reduce 159 (src line 1165)


state 290
	initprefix:  . tag.    (141)

	.  reduce 141 (src line 1054)


state 291
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 
	initprefix:  [ expr.] 

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	]  shift 300
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  error


state 292
	block1:  block1 decl.    (60)

	.  reduce 60 (src line 485)


state 293
	block1:  block1 lstmt.    (61)

	.  reduce 61 (src line 493)


state 294
	block:  { $$62 block1 }.    (63)

	.  reduce 63 (src line 504)


state 295
	lstmt:  label_list_opt.stmt 
	label_list_opt:  label_list_opt.label 

	tokARGBEGIN  shift 306
	tokBreak  shift 307
	tokCase  shift 316
	tokContinue  shift 308
	tokDefault  shift 317
	tokDo  shift 309
	tokFor  shift 310
	tokGoto  shift 311
	tokIf  shift 312
	tokLitChar  shift 10
	tokName  shift 318
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokReturn  shift 313
	tokSwitch  shift 314
	tokVaArg  shift 23
	tokWhile  shift 315
	tokString  shift 24
	{  shift 222
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	;  shift 303
	.  error

	expr  goto 7
	cexpr  goto 305
	expr_list  goto 6
	label  goto 302
	stmt  goto 301
	block  goto 304
	string_list  goto 11

state 296
	sudecor_list:  sudecor_list , sudecor.    (199)

	.  reduce 199 (src line 1394)


state 297
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	sudecor:  tag_opt : expr.    (137)
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  reduce 137 (src line 1017)


state 298
	braced_init_list:  { binit_list binit , }.    (152)

	.  reduce 152 (src line 1124)


state 299
	binit:  initprefix_list eq_opt init.    (156)

	.  reduce 156 (src line 1147)


state 300
	initprefix:  [ expr ].    (157)

	.  reduce 157 (src line 1154)


state 301
	lstmt:  label_list_opt stmt.    (67)

	.  reduce 67 (src line 528)


state 302
	label_list_opt:  label_list_opt label.    (177)

	.  reduce 177 (src line 1266)


state 303
	stmt:  ;.    (68)

	.  reduce 68 (src line 536)


state 304
	stmt:  block.    (69)

	.  reduce 69 (src line 542)


state 305
	stmt:  cexpr.; 

	;  shift 319
	.  error


state 306
	stmt:  tokARGBEGIN.block1 tokARGEND 
	block1: .    (59)

	.  reduce 59 (src line 480)

	block1  goto 320

state 307
	stmt:  tokBreak.; 

	;  shift 321
	.  error


state 308
	stmt:  tokContinue.; 

	;  shift 322
	.  error


state 309
	stmt:  tokDo.lstmt tokWhile ( cexpr ) ; 
	label_list_opt: .    (176)

	.  reduce 176 (src line 1261)

	label_list_opt  goto 295
	lstmt  goto 323

state 310
	stmt:  tokFor.( cexpr_opt ; cexpr_opt ; cexpr_opt ) lstmt 

	(  shift 324
	.  error


state 311
	stmt:  tokGoto.tag ; 

	tokName  shift 132
	tokTypeName  shift 133
	.  error

	tag  goto 325

state 312
	stmt:  tokIf.( cexpr ) lstmt 
	stmt:  tokIf.( cexpr ) lstmt tokElse lstmt 

	(  shift 326
	.  error


state 313
	stmt:  tokReturn.cexpr_opt ; 
	cexpr_opt: .    (166)

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  reduce 166 (src line 1205)

	expr  goto 7
	cexpr  goto 328
	cexpr_opt  goto 327
	expr_list  goto 6
	string_list  goto 11

state 314
	stmt:  tokSwitch.( cexpr ) lstmt 

	(  shift 329
	.  error


state 315
	stmt:  tokWhile.( cexpr ) lstmt 

	(  shift 330
	.  error


state 316
	label:  tokCase.expr : 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 331
	string_list  goto 11

state 317
	label:  tokDefault.: 

	:  shift 332
	.  error


state 318
	expr:  tokName.    (6)
	label:  tokName.: 

	:  shift 333
	.  reduce 6 (src line 213)


state 319
	stmt:  cexpr ;.    (70)

	.  reduce 70 (src line 547)


state 320
	block1:  block1.decl 
	block1:  block1.lstmt 
	stmt:  tokARGBEGIN block1.tokARGEND 
	label_list_opt: .    (176)

	tokARGEND  shift 334
	tokAuto  shift 50
	tokChar  shift 37
	tokConst  shift 56
	tokDouble  shift 44
	tokEnum  shift 36
	tokExtern  shift 52
	tokFloat  shift 43
	tokInline  shift 55
	tokInt  shift 39
	tokLong  shift 40
	tokRegister  shift 54
	tokShort  shift 38
	tokSigned  shift 41
	tokStatic  shift 51
	tokStruct  shift 48
	tokTypeName  shift 34
	tokTypedef  shift 53
	tokUnion  shift 49
	tokUnsigned  shift 42
	tokVoid  shift 45
	tokVolatile  shift 57
	.  reduce 176 (src line 1261)

	decl  goto 292
	label_list_opt  goto 295
	lstmt  goto 293
	cname  goto 46
	qname  goto 47
	tname  goto 32
	cqname  goto 33
	cqname_list  goto 30
	typeclass  goto 223
	structunion  goto 35
	typespec  goto 31

state 321
	stmt:  tokBreak ;.    (72)

	.  reduce 72 (src line 557)


state 322
	stmt:  tokContinue ;.    (73)

	.  reduce 73 (src line 562)


state 323
	stmt:  tokDo lstmt.tokWhile ( cexpr ) ; 

	tokWhile  shift 335
	.  error


state 324
	stmt:  tokFor (.cexpr_opt ; cexpr_opt ; cexpr_opt ) lstmt 
	cexpr_opt: .    (166)

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  reduce 166 (src line 1205)

	expr  goto 7
	cexpr  goto 328
	cexpr_opt  goto 336
	expr_list  goto 6
	string_list  goto 11

state 325
	stmt:  tokGoto tag.; 

	;  shift 337
	.  error


state 326
	stmt:  tokIf (.cexpr ) lstmt 
	stmt:  tokIf (.cexpr ) lstmt tokElse lstmt 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 7
	cexpr  goto 338
	expr_list  goto 6
	string_list  goto 11

state 327
	stmt:  tokReturn cexpr_opt.; 

	;  shift 339
	.  error


state 328
	cexpr_opt:  cexpr.    (167)

	.  reduce 167 (src line 1210)


state 329
	stmt:  tokSwitch (.cexpr ) lstmt 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 7
	cexpr  goto 340
	expr_list  goto 6
	string_list  goto 11

state 330
	stmt:  tokWhile (.cexpr ) lstmt 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 7
	cexpr  goto 341
	expr_list  goto 6
	string_list  goto 11

state 331
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.tokLsh expr 
	expr:  expr.tokRsh expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.tokLtEq expr 
	expr:  expr.tokGtEq expr 
	expr:  expr.tokEqEq expr 
	expr:  expr.tokNotEq expr 
	expr:  expr.& expr 
	expr:  expr.^ expr 
	expr:  expr.| expr 
	expr:  expr.tokAndAnd expr 
	expr:  expr.tokOrOr expr 
	expr:  expr.? cexpr : expr 
	expr:  expr.= expr 
	expr:  expr.tokAddEq expr 
	expr:  expr.tokSubEq expr 
	expr:  expr.tokMulEq expr 
	expr:  expr.tokDivEq expr 
	expr:  expr.tokModEq expr 
	expr:  expr.tokLshEq expr 
	expr:  expr.tokRshEq expr 
	expr:  expr.tokAndEq expr 
	expr:  expr.tokXorEq expr 
	expr:  expr.tokOrEq expr 
	expr:  expr.( expr_list_opt ) 
	expr:  expr.[ cexpr ] 
	expr:  expr.tokInc 
	expr:  expr.tokDec 
	label:  tokCase expr.: 
	expr:  expr.tokArrow tag 
	expr:  expr.. tag 

	=  shift 79
	tokAddEq  shift 80
	tokSubEq  shift 81
	tokMulEq  shift 82
	tokDivEq  shift 83
	tokModEq  shift 84
	tokLshEq  shift 85
	tokRshEq  shift 86
	tokAndEq  shift 87
	tokXorEq  shift 88
	tokOrEq  shift 89
	?  shift 78
	:  shift 342
	tokOrOr  shift 77
	tokAndAnd  shift 76
	|  shift 75
	^  shift 74
	&  shift 73
	tokEqEq  shift 71
	tokNotEq  shift 72
	<  shift 67
	>  shift 68
	tokLtEq  shift 69
	tokGtEq  shift 70
	tokLsh  shift 65
	tokRsh  shift 66
	+  shift 60
	-  shift 61
	*  shift 62
	/  shift 63
	%  shift 64
	.  shift 95
	[  shift 91
	(  shift 90
	tokDec  shift 93
	tokInc  shift 92
	tokArrow  shift 94
	.  error


state 332
	label:  tokDefault :.    (65)

	.  reduce 65 (src line 517)


state 333
	label:  tokName :.    (66)

	.  reduce 66 (src line 522)


state 334
	stmt:  tokARGBEGIN block1 tokARGEND.    (71)

	.  reduce 71 (src line 552)


state 335
	stmt:  tokDo lstmt tokWhile.( cexpr ) ; 

	(  shift 343
	.  error


state 336
	stmt:  tokFor ( cexpr_opt.; cexpr_opt ; cexpr_opt ) lstmt 

	;  shift 344
	.  error


state 337
	stmt:  tokGoto tag ;.    (76)

	.  reduce 76 (src line 583)


state 338
	stmt:  tokIf ( cexpr.) lstmt 
	stmt:  tokIf ( cexpr.) lstmt tokElse lstmt 

	)  shift 345
	.  error


state 339
	stmt:  tokReturn cexpr_opt ;.    (79)

	.  reduce 79 (src line 598)


state 340
	stmt:  tokSwitch ( cexpr.) lstmt 

	)  shift 346
	.  error


state 341
	stmt:  tokWhile ( cexpr.) lstmt 

	)  shift 347
	.  error


state 342
	label:  tokCase expr :.    (64)

	.  reduce 64 (src line 511)


state 343
	stmt:  tokDo lstmt tokWhile (.cexpr ) ; 

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  error

	expr  goto 7
	cexpr  goto 348
	expr_list  goto 6
	string_list  goto 11

state 344
	stmt:  tokFor ( cexpr_opt ;.cexpr_opt ; cexpr_opt ) lstmt 
	cexpr_opt: .    (166)

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  reduce 166 (src line 1205)

	expr  goto 7
	cexpr  goto 328
	cexpr_opt  goto 349
	expr_list  goto 6
	string_list  goto 11

state 345
	stmt:  tokIf ( cexpr ).lstmt 
	stmt:  tokIf ( cexpr ).lstmt tokElse lstmt 
	label_list_opt: .    (176)

	.  reduce 176 (src line 1261)

	label_list_opt  goto 295
	lstmt  goto 350

state 346
	stmt:  tokSwitch ( cexpr ).lstmt 
	label_list_opt: .    (176)

	.  reduce 176 (src line 1261)

	label_list_opt  goto 295
	lstmt  goto 351

state 347
	stmt:  tokWhile ( cexpr ).lstmt 
	label_list_opt: .    (176)

	.  reduce 176 (src line 1261)

	label_list_opt  goto 295
	lstmt  goto 352

state 348
	stmt:  tokDo lstmt tokWhile ( cexpr.) ; 

	)  shift 353
	.  error


state 349
	stmt:  tokFor ( cexpr_opt ; cexpr_opt.; cexpr_opt ) lstmt 

	;  shift 354
	.  error


state 350
	stmt:  tokIf ( cexpr ) lstmt.    (77)
	stmt:  tokIf ( cexpr ) lstmt.tokElse lstmt 

	tokElse  shift 355
	.  reduce 77 (src line 588)


state 351
	stmt:  tokSwitch ( cexpr ) lstmt.    (80)

	.  reduce 80 (src line 603)


state 352
	stmt:  tokWhile ( cexpr ) lstmt.    (81)

	.  reduce 81 (src line 608)


state 353
	stmt:  tokDo lstmt tokWhile ( cexpr ).; 

	;  shift 356
	.  error


state 354
	stmt:  tokFor ( cexpr_opt ; cexpr_opt ;.cexpr_opt ) lstmt 
	cexpr_opt: .    (166)

	tokLitChar  shift 10
	tokName  shift 8
	tokNumber  shift 9
	tokOffsetof  shift 21
	tokVaArg  shift 23
	tokString  shift 24
	&  shift 13
	+  shift 14
	-  shift 15
	*  shift 12
	!  shift 16
	~  shift 17
	tokSizeof  shift 20
	(  shift 22
	tokDec  shift 19
	tokInc  shift 18
	.  reduce 166 (src line 1205)

	expr  goto 7
	cexpr  goto 328
	cexpr_opt  goto 357
	expr_list  goto 6
	string_list  goto 11

state 355
	stmt:  tokIf ( cexpr ) lstmt tokElse.lstmt 
	label_list_opt: .    (176)

	.  reduce 176 (src line 1261)

	label_list_opt  goto 295
	lstmt  goto 358

state 356
	stmt:  tokDo lstmt tokWhile ( cexpr ) ;.    (74)

	.  reduce 74 (src line 567)


state 357
	stmt:  tokFor ( cexpr_opt ; cexpr_opt ; cexpr_opt.) lstmt 

	)  shift 359
	.  error


state 358
	stmt:  tokIf ( cexpr ) lstmt tokElse lstmt.    (78)

	.  reduce 78 (src line 593)


state 359
	stmt:  tokFor ( cexpr_opt ; cexpr_opt ; cexpr_opt ).lstmt 
	label_list_opt: .    (176)

	.  reduce 176 (src line 1261)

	label_list_opt  goto 295
	lstmt  goto 360

state 360
	stmt:  tokFor ( cexpr_opt ; cexpr_opt ; cexpr_opt ) lstmt.    (75)

	.  reduce 75 (src line 572)


98 terminals, 65 nonterminals
210 grammar rules, 361/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
114 working sets used
memory: parser 492/30000
267 extra closures
2721 shift entries, 7 exceptions
206 goto entries
238 entries saved by goto default
Optimizer space used: output 1415/30000
1415 table entries, 406 zero
maximum spread: 98, maximum offset: 359
